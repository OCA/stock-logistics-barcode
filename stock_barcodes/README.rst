==============
Stock Barcodes
==============

.. 
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! This file is generated by oca-gen-addon-readme !!
   !! changes will be overwritten.                   !!
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !! source digest: sha256:562b6364e48526a5b9b75ae3a63419f0f56376e5677d833291804cbdd39dc815
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png
    :target: https://odoo-community.org/page/development-status
    :alt: Beta
.. |badge2| image:: https://img.shields.io/badge/licence-AGPL--3-blue.png
    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html
    :alt: License: AGPL-3
.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fstock--logistics--barcode-lightgray.png?logo=github
    :target: https://github.com/OCA/stock-logistics-barcode/tree/14.0/stock_barcodes
    :alt: OCA/stock-logistics-barcode
.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png
    :target: https://translation.odoo-community.org/projects/stock-logistics-barcode-14-0/stock-logistics-barcode-14-0-stock_barcodes
    :alt: Translate me on Weblate
.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png
    :target: https://runboat.odoo-community.org/builds?repo=OCA/stock-logistics-barcode&target_branch=14.0
    :alt: Try me on Runboat

|badge1| |badge2| |badge3| |badge4| |badge5|

This module provides a barcode reader interface for stock module.

This module contains a base wizard read barcode that can be extended by
other modules.

This module also makes use of this wizard for providing barcode support for
doing inventories and picking operations.

**Table of contents**

.. contents::
   :local:

Configuration
=============

Barcodes Actions
~~~~~~~~~~~~~~~~

The Barcode Actions are selectable from the "Barcode" interface.

These can be personalized by selecting an action window, and apply context.

The purpose of the action is to direct the user towards the records of the models which have integrations with barcodes.

Barcodes Options
~~~~~~~~~~~~~~~~

Options are used to describe how the barcode interface should behave.

To properly configure these options, look out for the following fields:

* Code: refers to the code in the Picking Type

* Behaviour Settings: check the 'Help Tooltip' by hovering on the fields

* Steps to Scan:

  * Step: Order of the actions to be executed
  * Name: Significant name to be visualized in the alert on the top of the screen for any information related to that field
  * Field Name: Name of the field of the wizard (e.g. For pickings the field are in `stock.barcodes.read.picking`) which will be filled
  * Filled Default: Useful to automatically fill values based on the move line (Can be used on locations, product, lot, quantity, etc...)
  * Forced: Adds a layer of validation, that doesn't let the user proceed until that field is entered correctly
  * To Scan: This field will be filled using a barcode scanner, after the scan the barcode will be processed by a method named `_process_barcode_<field_name>()`
  * Required: Every required field will be checked before confirmation
  * Clean After Done: These fields will be cleaned after confirmation


Usage
=====

Barcode interface for inventory operations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

To use the barcode interface on inventory:

#. Go to *Inventory > operations > Inventory Adjustments*.
#. Create new inventory with "Select products manually" option.
#. Start inventory.
#. Click to "Scan barcodes" smart button.
#. Start reading barcodes.

Barcode interface for picking operations
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
You can use the barcode interface in a picking or an operation type, the main
difference is that if you open the barcode interface from a picking, this
picking is locked and you read products for it.

To use the barcode interface on picking operations:

#. Go to *Inventory*.
#. Click on scanner button on any operation type.
#. Start reading barcodes.
#. The wizard will suggest pickings based on the scanned data (Product, quantity, lot, etc...)
#. Select a picking by clicking on the pin, and complete the desired operations.

To use the barcode interface on a picking:

#. Go to *Inventory > Transfers*.
#. Click to "Scan barcodes" smart button.
#. Start reading barcodes.

The barcode scanner interface has two operation modes. In both of them user
can scan:

#. Warehouse locations with barcode.
#. Product packaging with barcode.
#. Product with barcode.
#. Product Lots (The barcode is name field in this case).

Picking validation with a barcode scanner
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**The following example is based on the "Picking IN options".**

Requirements:

* Everything is based on the default configuration
* Must have a receipt picking with some products with barcodes

Follow the steps to validate a picking:

#. Go to *Inventory > Transfers*.
#. Open a **receipt** picking.
#. Click the "Scan barcodes" smart button.
#. The wizard interface to scan barcodes will show.
#. Start scanning the barcode of the currently selected product
    (Note: Scan the same barcode multiple times to add up quantity)
#. Repeat for every product in the picking paying attention to the currently selected product
    (The one in the yellow box)
#. Once it's all done, click on "Validate"

Automatic operation mode
~~~~~~~~~~~~~~~~~~~~~~~~

This is the default mode, all screen controls are locked to avoid scan into
fields.

The user only has to scan barcode in physical warehouse locations with a
scanner hardware, the interface read the barcode and do operations in this
order:

#. Try search a product, if found, is assigned to product_id field and creates
   or update inventory line with 1.0 unit. (If product has tracking by lots
   the interface wait for a lot to be scanned).
#. Try search a product packaging, if found, the product_id related is set,
   product quantities are updated and create or update inventory line with
   product quantities defined in the product packaging.
#. Try search a lot (The product is mandatory in this case so you first scan a
   product and then scann a lot), this lot field is not erased until that
   product change, so for each product scann the interface add or update a
   inventory line with this lot.
#. Try to search a location, if found the field location is set and next scan
   action will be done with this warehouse location.

If barcode has not found, when message is displayed you can create this lot
scanning the product.

Manual entry mode
~~~~~~~~~~~~~~~~~

You can change to "manual entry" to allow to select data without scanner
hardware, but hardware scanner still active on, so a use case would be when
user wants set quantities manually instead increment 1.0 unit peer scan action.

Scan logs
~~~~~~~~~

All scanned barcodes are saved into model.
Barcode scanning interface display 10 last records linked to model, the goal of
this log is show to user other reads with the same product and location done
by other users.
User can remove the last read scan.

Known issues / Roadmap
======================

* Excute action_done() method outside onchange environment.
* Allow create product when a barcode has not been found.
* Allow to select picking reading its barcode.
* Allow to select multiple pickings to process scanned products.

Changelog
=========

11.0.1.1.0 (2019-09-24)
~~~~~~~~~~~~~~~~~~~~~~~

* [ADD] New feature.
  User can uses barcode interface in picking operations.

13.0.1.1.1 (2021-02-06)
~~~~~~~~~~~~~~~~~~~~~~~

* [ADD] New feature.
  Add option to get lots automatically based on removal strategy in inventory.

14.0.1.0.0 (2021-04-05)
~~~~~~~~~~~~~~~~~~~~~~~

* [ADD] New feature.
  Add security for users.

Bug Tracker
===========

Bugs are tracked on `GitHub Issues <https://github.com/OCA/stock-logistics-barcode/issues>`_.
In case of trouble, please check there if your issue has already been reported.
If you spotted it first, help us to smash it by providing a detailed and welcomed
`feedback <https://github.com/OCA/stock-logistics-barcode/issues/new?body=module:%20stock_barcodes%0Aversion:%2014.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.

Do not contact contributors directly about support or help with technical issues.

Credits
=======

Authors
~~~~~~~

* Tecnativa

Contributors
~~~~~~~~~~~~


* `Tecnativa <https://www.tecnativa.com>`_:

  * Sergio Teruel
  * Carlos Dauden
  * Pedro M. Baeza
  * Alexandre D. DÃ­az

* `Onestein <https://www.onestein.eu>`_:

  * Andrea Stirpe

* `InitOS <https://www.initos.com>`_:

  * Foram Shah

* `ForgeFlow <https://www.forgeflow.com>`_:

  * Lois Rilo

Maintainers
~~~~~~~~~~~

This module is maintained by the OCA.

.. image:: https://odoo-community.org/logo.png
   :alt: Odoo Community Association
   :target: https://odoo-community.org

OCA, or the Odoo Community Association, is a nonprofit organization whose
mission is to support the collaborative development of Odoo features and
promote its widespread use.

This module is part of the `OCA/stock-logistics-barcode <https://github.com/OCA/stock-logistics-barcode/tree/14.0/stock_barcodes>`_ project on GitHub.

You are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.
